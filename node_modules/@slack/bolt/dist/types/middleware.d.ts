import { StringIndexed } from './helpers';
import { SlackEventMiddlewareArgs } from './events';
import { SlackActionMiddlewareArgs } from './actions';
import { SlackCommandMiddlewareArgs } from './command';
import { SlackOptionsMiddlewareArgs } from './options';
import { SlackShortcutMiddlewareArgs } from './shortcuts';
import { SlackViewMiddlewareArgs } from './view';
import { CodedError, ErrorCode } from '../errors';
import { WebClient } from '@slack/web-api';
import { Logger } from '@slack/logger';
export declare type AnyMiddlewareArgs = SlackEventMiddlewareArgs | SlackActionMiddlewareArgs | SlackCommandMiddlewareArgs | SlackOptionsMiddlewareArgs | SlackViewMiddlewareArgs | SlackShortcutMiddlewareArgs;
export interface PostProcessFn {
    (error: Error | undefined, done: (error?: Error) => void): unknown;
}
export interface Context extends StringIndexed {
}
export interface Middleware<Args> {
    (args: Args & {
        next: NextMiddleware;
        context: Context;
        logger: Logger;
        client: WebClient;
    }): unknown;
}
export interface NextMiddleware {
    (error: Error): void;
    (postProcess: PostProcessFn): void;
    (): void;
}
export interface ContextMissingPropertyError extends CodedError {
    code: ErrorCode.ContextMissingPropertyError;
    missingProperty: string;
}
//# sourceMappingURL=middleware.d.ts.map